python("import mocapToRig as moctor\n"+
		"reload(moctor)\n");

//python("moctor.applyMocapToRig()\n\n");


global proc Mocap2RigUI() {
	moctor_Close();

	window -title "Mocap To Rig" -widthHeight 600 200 Mocap2RigUI;

		columnLayout -adjustableColumn true moctor_MainCL;

			button -label "New Scene"
					-command ("moctor_NewScene()")
					moctor_NewSceneBtn;

			rowLayout -nc 3 -ad3 3 -cw3 250 250 200 moctor_MainRL;

				columnLayout moctor_MocapCL;

					frameLayout -label "Mocap";
						columnLayout;
							optionMenuGrp
									-label "Mapping:"
									-extraLabel ".sk.json"
									-columnAttach3 left left left
									-columnAlign3 left left right
									-columnWidth3 50 130 50
									-changeCommand "moctor_CheckMocapStatus()"
									moctor_SourceOMG;
								menuItem -label "iPi";
							textFieldButtonGrp
									-label "FBX:"
									-text ""
									-ad3 2
									-cw3 50 150 50
									-buttonLabel "..."
									-buttonCommand "moctor_BrowseMocap()"
									-changeCommand "moctor_CheckMocapStatus()"
									moctor_SourceFile;
							setParent ..;
						button -label "Import" -c "moctor_LoadMocap()";
						text -l "" moctor_MocapStatusLabel;
						setParent ..;

					setParent ..;

				columnLayout moctor_RigCL;

					frameLayout -label "Rig";
						columnLayout;
							optionMenuGrp
									-label "Mapping"
									-extraLabel ".cr.json"
									-columnAttach3 left left left
									-columnAlign3 left left right
									-columnWidth3 50 130 50
									moctor_TargetOMG;
								menuItem -label "AdvancedSkeleton";
							textFieldButtonGrp
									-label "Rig:"
									-text ""
									-ad3 2
									-cw3 50 150 50
									-buttonLabel "..."
									-buttonCommand "moctor_BrowseRig()"
									-changeCommand "moctor_CheckMocapStatus()"
									moctor_TargetFile;
							setParent ..;
						button;
						text -l "" moctor_RigStatusLabel;
						setParent ..;

					setParent ..;

				columnLayout moctor_BothCL;
					button;
					button;
					setParent ..;

				setParent ..; // back to rowLayout

			setParent ..; // back to main ColumnLayout;

			rowLayout -nc 3 -adjustableColumn true;
				button -label "Apply" -command "moctor_Do()" moctor_ApplyBtn;
				button -label "Close" -command "moctor_Close()" moctor_CloseBtn;
				setParent ..;
		setParent ..;

	showWindow Mocap2RigUI;

	moctor_CheckMocapStatus();
	moctor_CheckRigStatus();
}

global proc moctor_NewScene() {
	file -new -f;
}

global proc moctor_Close() {
	if (`window -exists Mocap2RigUI`) {
		deleteUI Mocap2RigUI;
	}
}

global proc moctor_Do() {
	//python("moctor.applyMocapToRig()\n\n");
	print "Doing Stuff\n";
}

global proc moctor_CheckMocapStatus() {
	string $mapping = `optionMenuGrp -q -v moctor_SourceOMG`;
	int $rootExists = python(
			`format -s $mapping "moctor.checkMappingRoot('^1s')"`);
	if ($rootExists) {
		int $matches[] = python(
				`format -s $mapping "moctor.checkMappingCount('^1s')"`);
		string $str = `format
				-s ((string)($matches[0])) -s ((string)($matches[1]))
				"^1s of ^2s found"`;
		text -e -l $str -bgc 1 1 1 moctor_MocapStatusLabel;
	}
	else {
		text -e -l "Mocap Root Not Found!" -bgc 1 0 0 moctor_MocapStatusLabel;
	}
}

global proc moctor_LoadMocap() {
	string $fbx = `textFieldButtonGrp -q -text moctor_SourceFile`;
	python(`format -s $fbx "moctor.importMocap(r'^1s')"`);
	$rootExists = moctor_CheckMocapStatus();
}

global proc string[] moctor_BrowseMocap() {
	string $paths[] = `fileDialog2
			-fileFilter "*.fbx"
			-fileMode 1
			-cap "Select Mocap File"`;
	print $paths; print "\n";
	textFieldButtonGrp -e -text $paths[0] moctor_SourceFile;
	return $paths;
}

global proc moctor_CheckRigStatus() {
	warning "Checking";
}

Mocap2RigUI();

if (`objExists "Hip"`) {
float $frames[];
string $sf, $ef;

string $animCurves[] = `listConnections -d off -s on -scn off "Hip"`;
$frames = `keyframe -q $animCurves[0]`;
$ef = $frames[size($frames) - 1];
$sf = $frames[0];

string $range = $sf + ":" + $ef;

playbackOptions -maxTime $ef;

bakeResults -simulation true -t $range -sampleBy 1 -disableImplicitControl true
		-preserveOutsideKeys true -sparseAnimCurveBake false
		-removeBakedAttributeFromLayer false -removeBakedAnimFromLayer false
		-bakeOnOverrideLayer false -minimizeRotation true
		-controlPoints false -shape true `ls -sl`;

hikDeleteCustomRig(hikGetCurrentCharacter());
hikDeleteDefinition();
hikSelectDefinitionTab();
hikDeleteDefinition();
delete "Hip";
}
